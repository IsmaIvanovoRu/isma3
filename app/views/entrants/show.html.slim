- templates_exist = @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'entrant_application' && attachment['template']}.length > 0
section.panel
  .row
    .large-12.small-12.columns
      h2.right 
        span Номер личного дела: 
        span= @entrant_application['entrant_application']['application_number'] ? "#{"%04d" % @entrant_application['entrant_application']['application_number']}" : "еще не присвоен"
      h2= [@entrant_application['entrant_application']['entrant_last_name'], @entrant_application['entrant_application']['entrant_first_name'], @entrant_application['entrant_application']['entrant_middle_name']].compact.join(' ')
      - case @entrant_application['entrant_application']['status_id']
      - when 2
        .label.info= 'Ваше заявление находится на рассмотрении'
      - when 4
        .label.success= 'Ваше заявление допущено к участию в конкурсе'
      - when 6
        .label.alert= 'Ваше заявление отзвано'
  .row
    .large-12.small-12.columns
      - if @entrant_application['entrant_application']['comment']
        h3 Внимание! При рассмотрении Вашего дела выявлены следующие замечания
        p
          strong= @entrant_application['entrant_application']['comment']
        hr
      p Добро пожаловать в Ваш личный кабинет абитуриента.
      - unless templates_exist
        p Осталось сделать несколько шагов и Ваши документы будут приняты.
        p В первую очередь, Вам нужно прикрепить электронные копии документов, необходимых для поступления. Подойдут файлы в любых графических форматах. Затем отправьте их на проверку, нажав на кнопку в конце страницы. Если с документами все будет в порядке, сотрудник приемной комиссии сформирует Вам шаблон заявления, или укажет на наличие замечаний к пакету документов (в том и другом случае Вы получите уведомление на электронную почту, указанную в анкете).
      p Если на любом этапе рассмотрения пакета документов Вам потребуется добавить конкурс или индивидуальное достижение, сменить форму сдачи вступительных испытаний, сообщить об ошибке, воспользуйтесь полем "Запросить изменения" внизу страницы. Нет необходимости заполнять новую анкету.
      p После внесения необходимых изменений в Ваше дело сотрудник приемной комиссии повторно сформирует бланк заявления о приеме и пришлет Вам уведомление.
      hr
  .row
    .large-12.small-12.columns
      - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] =~ /_application/ && !attachment['template']}.length > 0
        dl
          dt
            h3 Ваши заявления
            - @entrant_application['attachments'].each do |attachment|
              - if attachment['document_type'] == 'entrant_application' && !attachment['template']
                dd= link_to 'Заявление о приеме', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - if attachment['document_type'] == 'consent_application' && !attachment['template']
                dd= link_to 'Заявление о согласии на зачисление', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - if attachment['document_type'] == 'withdraw_application' && !attachment['template']
                dd= link_to 'Заявление об отказе от зачисления', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - if attachment['document_type'] == 'recall_application' && !attachment['template']
                dd= link_to 'Заявление об отзыве документов', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
      - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'entrant_application' && attachment['template']}.length > 0
        - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'entrant_application' && !attachment['template']}.length > 0
          dl
            dt
              h3 Бланк заявления об отзыве документов 
              strong заполняется только если Вы хотите полностью отозвать весь пакет документов, поданных в ИвГМА
              - @entrant_application['attachments'].each do |attachment|
                - if attachment['document_type'] == 'recall_application' && attachment['template']
                  dd= link_to 'Скачать', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
                  dd= render partial: 'add_attachment', locals: { message: 'Для отзыва документов после скачивания необходимо распечатать и подписать заявление и загрузить обратно электронную копию', document_type: 'recall_application', document_id: @entrant_application['entrant_application']['id'] }              
        - else
          h3 Бланк заявления о приеме
          - @entrant_application['attachments'].each do |attachment|
            - if attachment['document_type'] == 'entrant_application' && attachment['template']
              dd= link_to 'Скачать', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              dd= render partial: 'add_attachment', locals: { message: 'После скачивания необходимо распечатать и подписать заявление и загрузить обратно электронную копию', document_type: 'entrant_application', document_id: @entrant_application['entrant_application']['id'] }
        hr
  .row
    .large-12.small-12.columns
      - contracts_exist = @entrant_application['competitive_groups'].select{|competitive_group| competitive_group['education_source_id'] == 15}.length > 0
      - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] =~ /_application/}.length > 0
        h3 Информация о заявлениях о согласии
        p Заявление о согласии - это документ, который позволяет приемной комиссии однозначно определить куда зачислить абитуриента в случае его прохождения по нескольким условиям поступления. Наличие согласия в приемной комиссии на момент издания приказа о зачислении является обязательным условием зачисления поступающего в академию.
        p Обращаем внимание, что одномоментно у поступающего может быть только одно согласие на зачисление, и только в одном вузе. Также, стоит учесть, что на бюджетную форму зачисления согласие можно отозвать и подать заново на другой конкурс только один раз. Поэтому, рекомендуем не подавать согласия заранее, а дождаться окончания подачи документов и формирования конкурсных списков с баллами, по которым можно будет оценить свои шансы на прохождение по тому или иному конкурсу.
        p Для подачи заявлений о согласии установлены специальные дни непосредственно перед изданием приказов о зачислении. Заявления принимаются в электронном виде.
        p Однако правила приема требуют предоставить возможность поступающему подать заявление о согласии одновременно с заявлением о приеме, поэтому Ваши бланки заявлений о согласии доступны уже сейчас.
        hr
      - if contracts_exist
        h3 Информация о договорах для поступления на внебюджетные места
        p 
          span Заполненный бланк договора о платных образовательных услугах по каждой специальности необходимо отсканировать и выслать на адрес электронной почты: 
          span= mail_to 'contract@isma.ivanovo.ru'
        p После подписания договора со стороны академии в строках вместо ссылки на загрузку бланков появится знак +
        hr
      table.table
        caption Перечень конкурсов
        thead
          tr
            th.text-center Конкурсная группа
            th.text-center Наличие согласия
            - if contracts_exist
              th.text-center Наличие договора
            th.text-center Статус зачисления
        tbody
          - @entrant_application['competitive_groups'].each do |competitive_group|
            - agreement_exists = @entrant_application['entrant_application']['budget_agr'] == competitive_group['id'] || @entrant_application['entrant_application']['paid_agr'] == competitive_group['id']
            - contract_exists = @entrant_application['contracts'].map{|c| c['competitive_group_id']}.include?(competitive_group['id'])
            tr
              td
                = competitive_group['name']
              td.text-center
                - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'entrant_application' && !attachment['template']}.length > 0
                  - if agreement_exists
                    - @entrant_application['attachments'].each do |attachment|
                      - if attachment['document_type'] == 'withdraw_application' && attachment['document_id'] == competitive_group['id'] && attachment['template']
                        .= link_to 'Скачать бланк заявления об отказе', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
                  - else
                    - unless @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'consent_application' && !attachment['template']}.length > @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'withdraw_application' && !attachment['template']}.length
                      - @entrant_application['attachments'].each do |attachment|
                        - if attachment['document_type'] == 'consent_application' && attachment['document_id'] == competitive_group['id'] && attachment['template']
                          .= link_to 'Скачать бланк заявления о согласии', "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - if contracts_exist
                td.text-center
                  - if contract_exists
                    span +
                  - else
                    - if competitive_group['education_level_id'] == 18
                      - if competitive_group['education_source_id'] == 15
                        = link_to 'Скачать бланк договора', attachment_url(6909), target: :blank
                    - else
                      - if competitive_group['name'] =~ /Леч/ && competitive_group['education_source_id'] == 15
                        p= link_to 'Скачать образец договора', attachment_url(50191), target: :blank
                        p= link_to 'Скачать бланк договора', attachment_url(49994), target: :blank
                      - if competitive_group['name'] =~ /Пед/ && competitive_group['education_source_id'] == 15
                        p= link_to 'Скачать образец договора', attachment_url(50192), target: :blank
                        p= link_to 'Скачать бланк договора', attachment_url(49993), target: :blank
                      - if competitive_group['name'] =~ /Стомат/ && competitive_group['education_source_id'] == 15
                        p= link_to 'Скачать образец договора', attachment_url(50193), target: :blank
                        p= link_to 'Скачать бланк договора', attachment_url(49992), target: :blank
              td.text-center
                - if @entrant_application['entrant_application']['enrolled'] == competitive_group['id']
                  span= "зачислен #{@entrant_application['entrant_application']['enrolled_date']}"
      - if @entrant_application['attachments'].select{|attachment| attachment['document_type'] == 'entrant_application' && !attachment['template']}.length > 0
        - unless @entrant_application['entrant_application']['budget_agr'] || @entrant_application['entrant_application']['paid_agr']
          = render partial: 'add_attachment', locals: { message: 'После скачивания необходимо распечатать и подписать заявление о согласии на зачисление и загрузить обратно электронную копию', document_type: 'consent_application', document_id: nil }
        - else
          = render partial: 'add_attachment', locals: { message: 'После скачивания необходимо распечатать и подписать заявление об  отказе от зачисление и загрузить обратно электронную копию', document_type: 'withdraw_application', document_id: nil }
    hr
  .row
    .large-12.small-12.columns
      table.table
        caption Конкурсные баллы
        thead
          tr
            - @entrant_application['marks'].each do |mark|
              th = mark['subject']
            th Сумма
            th С учетом достижений
        tbody
          tr
            - @entrant_application['marks'].each do |mark|
              td= "Форма экзамена - #{mark['form']}, оценка #{mark['value'] == 0 ? 'еще не известна' : mark['value'] }"
            td= @entrant_application['sum']
            td= @entrant_application['full_sum']
      hr
  .row
    .large-12.small-12.columns
      - unless @entrant_application['achievements'].empty?
        table
          caption Индивидуальные достижения
          th Название достижения
          th Файлы
          th Действие
          - @entrant_application['achievements'].each do |achievement|
            tr
              td
                = achievement['name']
                td
                  dl
                    dt
                      - @entrant_application['attachments'].each do |attachment|
                        - if attachment['document_type'] == 'achievement' && attachment['document_id'] == achievement['id']
                          dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
                td
                  - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
                    = render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл с электронной копией документа, подтверждающего наличие достижения', document_type: 'achievement', document_id: achievement['id'] }
        hr
  .row
    .large-12.small-12.columns
      - if @entrant_application['entrant_application']['olympionic'] || @entrant_application['entrant_application']['benefit']
        h2 "Льготы" 
        p= "Олимпиада" if @entrant_application['entrant_application']['olympionic']
        p= "Особое право поступления" if @entrant_application['entrant_application']['benefit']
        hr
  .row
    .large-12.small-12.columns
      h2 Документы
      dl
        dt
          h3 Документ, удостоверяющий личность
          - @entrant_application['identity_documents'].each do |identity_document|
            dd= identity_document['identity_document_data']
            - @entrant_application['attachments'].each do |attachment|
              - if attachment['document_type'] == 'identity_document' && attachment['document_id'] == identity_document['id']
                dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
            - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
              dd= render partial: 'add_attachment', locals: { message: identity_document['identity_document_type'] == 1 ? 'Выберите и прикрепите файл(ы) с электронной копией первой страницы, страницы с регистрацией и страницы с данными о ранее выданных паспортах (если такие были)' : 'Выберите и прикрепите электронную копию документа, удостоверяющего личность', document_type: 'identity_document', document_id: identity_document['id'] }
        dt
          h3 Документ об образовании
          - if @entrant_application['education_document']['education_document_type']
            - case @entrant_application['education_document']['education_document_type']
            - when 'HighEduDiplomaDocument'
              - education_document_name = 'Диплом о высшем профессиональном образовании'
            - when 'MiddleEduDiplomaDocument'
              - education_document_name = 'Диплом о среднем специальном образовании'
            - when 'SchoolCertificateDocument'
              - education_document_name = 'Аттестат о среднем общем образовании'
          dd
            = "#{education_document_name} #{@entrant_application['education_document']['education_document_data']}"
            span &nbsp;
            p= @entrant_application['education_document']['education_speciality_code']
            - @entrant_application['attachments'].each do |attachment|
              - if attachment['document_type'] == 'education_document' && attachment['document_id'] == @entrant_application['education_document']['id']
                dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
          - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
            dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл(ы) с полной электронной копией документа об образовании (включая приложение с оценками и страницей с подписью и печатью)', document_type: 'education_document', document_id: @entrant_application['education_document']['id'] }
        - unless @entrant_application['target_contracts'].empty?
          dt
            h3 Целевые договоры
            - @entrant_application['target_contracts'].each do |target_contract|
              dd= "#{target_contract['competitive_group_name']} - #{target_contract['target_organization_name']}"
              - @entrant_application['attachments'].each do |attachment|
                - if attachment['document_type'] == 'target_contract' && attachment['document_id'] == target_contract['id']
                  dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
                - if attachment['document_type'] == 'target_contract' && attachment['document_id'].nil?
                  dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
                dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл с электронной копией целевого договора (должен быть подписан всеми сторонами)', document_type: 'target_contract', document_id: target_contract['id'] }
        - if  @entrant_application['entrant_application']['benefit']
          dt
            h3 Документы на льготу
            - @entrant_application['benefit_documents'].each do |benefit_document|
              dd= benefit_document['benefit_document_data']
              - @entrant_application['attachments'].each do |attachment|
                - if attachment['document_type'] == 'benefit_document' && attachment['document_id'] == benefit_document['id']
                  dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
                dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл с электронной копией документа, подтверждающего наличие льготы', document_type: 'benefit_document', document_id: benefit_document['id'] }
        - if @entrant_application['entrant_application']['olympionic']
          dt
            h3 Диплом победителя/призера олимпиады
            - @entrant_application['olympic_documents'].each do |olympic_document|
              dd= olympic_document['olympic_document_data']
              - @entrant_application['attachments'].each do |attachment|
                - if attachment['document_type'] == 'olympic_document' && attachment['document_id'] == olympic_document['id']
                  dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
                dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите файл с электронной копией диплома', document_type: 'olympic_document', document_id: olympic_document['id'] }
        - unless @entrant_application['other_documents'].empty?
          dt
            h3 Прочие документы
            - @entrant_application['other_documents'].each do |other_document|
              dd= other_document['other_document_data']
              - @entrant_application['attachments'].each do |attachment|
                - if attachment['document_type'] == 'other_document' && attachment['document_id'] == other_document['id']
                  dd= link_to attachment['filename'], "#{api_attachment_path(attachment['data_hash'])}?filename=#{attachment['filename']}"
              - unless templates_exist && !(@entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'внесены изменения')
                dd= render partial: 'add_attachment', locals: { message: 'Выберите и прикрепите электронную копию документа', document_type: 'other_document', document_id: other_document['id'] }
    hr
  - if @entrant_application['entrant_application']['request'].nil?
    .row
      .large-12.small-12.columns
        = form_tag api_entrant_application_path, method: :put
          .large-12.small-12.columns
            = label_tag 'В случае появления необходимости внесения изменений в указанные в личном кабинете данные (добавить участие в конкурсе, индивидуальное достижение, льготу, внести изменения в документы), сформулируйте в свободной форме, что нужно сделать и нажмите кнопку Запросить изменения'
            = text_area_tag :request
          = submit_tag 'Запросить изменения', class: 'button tiny'
        hr
  - if @entrant_application['entrant_application']['status'] == 'проверено, есть замечания' || @entrant_application['entrant_application']['status'] == 'новое'
    .row
      .large-12.small-12.columns
        p После завершения прикрепления документов можно отправить Ваши данные на проверку сотрудниками приемной комиссии.
        = link_to 'Отправить на проверку', api_entrant_application_path, class: 'button tiny', method: :put
